{"version":3,"sources":["components/list.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","useState","isChecked","setIsChecked","source","type","checked","onChange","e","target","onClick","onClickDelete","index","App","listItem","setListItem","currentInput","setCurrentInput","slice","concat","className","onSubmit","preventDefault","value","map","sourceInput","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAaeA,G,KAVE,SAACC,GAAW,IAAD,EACUC,oBAAS,GADnB,mBACjBC,EADiB,KACNC,EADM,KAGxB,OACI,8BACI,+BAAKH,EAAMI,OAAX,IAAmB,uBAAOC,KAAK,WAAWC,QAASJ,EAAWK,SAAU,SAAAC,GAAC,OAAIL,EAAaK,EAAEC,OAAOH,YAAnG,IAA+G,wBAAQI,QAAS,kBAAMV,EAAMW,cAAcX,EAAMY,QAAjD,2BCgC5GC,MApCf,WAAgB,IAAD,EACmBZ,mBAAS,IAD5B,mBACNa,EADM,KACIC,EADJ,OAE2Bd,mBAAS,IAFpC,mBAENe,EAFM,KAEQC,EAFR,KASPN,EAAgB,SAACC,GACrBG,EAAY,YAAID,EAASI,MAAM,EAAEN,IAC/BO,OAAOL,EAASI,MAAMN,EAAQ,MAGlC,OACE,sBAAKQ,UAAU,yBAAf,UACE,sBAAMC,SAZQ,SAACb,GACjBA,EAAEc,iBACFP,EAAY,GAAD,mBAAKD,GAAL,CAAeE,MAUxB,SACE,sBAAKI,UAAU,mBAAf,UACE,4CACA,uBAAOA,UAAU,0BAA0Bb,SAAU,SAACC,GAAD,OAAOS,EAAgBT,EAAEC,OAAOc,QAAQA,MAAOP,IACpG,uBACAI,UAAU,6BACVf,KAAK,SACLkB,MAAM,aAKRT,EAASU,KAAI,SAACC,EAAaC,GACzB,OAAO,cAAC,EAAD,CAAUtB,OAAQqB,EAAad,cAAeA,EAAeC,MAAOc,WCrBtEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65d240ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ToDoList = (props) => {\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <h4>{props.source} <input type=\"checkbox\" checked={isChecked} onChange={e => setIsChecked(e.target.checked)}/> <button onClick={() => props.onClickDelete(props.index)}>Delete</button></h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport ToDoList from './components/list.js';\n\nfunction App() {\n  const [listItem, setListItem] = useState([]);\n  const [currentInput, setCurrentInput] = useState(\"\");\n\n  const addToList = (e) => {\n    e.preventDefault();\n    setListItem([...listItem, currentInput]);\n  }\n\n  const onClickDelete = (index) => {\n    setListItem([...listItem.slice(0,index)\n    ].concat(listItem.slice(index + 1)))\n  }\n\n  return (\n    <div className=\"bg-light col-8 mx-auto\">\n      <form onSubmit={addToList}>\n        <div className=\"row ml-4 mx-auto\">\n          <h2>To Do List</h2>\n          <input className=\"form-control col-4 ml-4\" onChange={(e) => setCurrentInput(e.target.value)} value={currentInput}></input>\n          <input \n          className=\"btn btn-primary col-1 ml-4\" \n          type=\"Submit\" \n          value=\"Add\"\n          ></input>\n        </div>\n      </form>\n      {\n        listItem.map((sourceInput, i) => {\n          return <ToDoList source={sourceInput} onClickDelete={onClickDelete} index={i}/>\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}